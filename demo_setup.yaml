# Configuration for recording two channels with mimoCoRB
#  -----------------------------------------------------
#
# configure two buffers:
#  - RB_1 for raw waveforms
#  - RB_2 for derived pulse parameters
#  data from RB_2, the result buffer, are saved to a file in csv (text) format.
#
#  - data from RB_1 are also passed to an obsever process driving a real-time display
#  - data from RB_2 are passed to a Reader process driving a real-time histogram display
#
# Notes:
# 
#    1. additional config files controlling the user functions are
#       located in the subdirectory config/
#    2. necessary application-specific user code is located
#       in the subdirectory modules/
#
# ----------------------------------------------------------------------------
#

RingBuffer:
  # define ring buffers
  - RB_1:
      # raw input data buffer (from redpitaya)
      number_of_slots: 100
      channel_per_slot: 1000
      data_type:
          1: ['trigger', "int16"]
          2: ['coincidence', "int16"]
  - RB_2:
      # pulse height of the raw data (trigger channel)
      number_of_slots: 500 # should be a little higher as the writing to file halts regularly
      channel_per_slot: 1
      data_type:
          1: ['height', "int16"]

  - RB_3:
      # raw input data of the coincidence pulses
      number_of_slots: 100
      channel_per_slot: 1000
      data_type:
          1: ['ch1', "int16"]
          2: ['ch2', "int16"]
  
  - RB_4:
      # pulse height of the coinciding pulses
      number_of_slots: 100
      channel_per_slot: 1
      data_type:
          1: ['height_trigger', "int16"]
          2: ['height_coincidence', "int16"]
          3: ['DeltaT', "int16"]

Functions:
  # define functions and ringbuffer assignment

  - Fkt_main:
      config_file: "config/general-config.yaml"

  - Fkt_1:
    # data from RedPitaya
    #    file_name: "rpDAQ"
    #    fkt_name: "rp_mimocorb"
       file_name: "modules/file_source"
       fkt_name: "tar_parquet_source"
       config_file: "config/rp-config.yaml"
       num_process: 1
       RB_assign:
           RB_1: "write"

  - Fkt_2:
       file_name: "modules/coincidence"
       fkt_name: "pha_and_split_coincidence"
       config_file: "config/coincidence-config.yaml"
       num_process: 1
       RB_assign:
           RB_1: "read"
           RB_2: "write"
           RB_3: "write"

  - Fkt_3:
      file_name: "modules/spectrum"
      fkt_name: "rb_to_spectrum"
      config_file: "config/coincidence-config.yaml"
      num_process: 1
      RB_assign:
           RB_2: "read"

  - Fkt_4:
      file_name: "modules/coincidence"
      fkt_name: "coincidence_analysis"
      config_file: "config/coincidence-config.yaml"
      num_process: 1
      RB_assign:
           RB_3: "read"
           RB_4: "write"

  - Fkt_5:
      file_name: "modules/coincidence_spectrum"
      fkt_name: "rb_to_coincidence_spectrum"
      config_file: "config/coincidence-config.yaml"
      num_process: 1
      RB_assign:
           RB_4: "read"

# --- the following functions are optioal 	   

  - Fkt_6:
      file_name: "modules/gui"
      fkt_name: "real_time_plot"
      config_file: "config/coincidence-config.yaml"
      num_process: 1
      RB_assign:
           RB_1: "observe"
           RB_3: "observe"



